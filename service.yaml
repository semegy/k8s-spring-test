
# helm-v3.2.3 wget https://get.helm.sh/helm-v3.2.3-linux-amd64.tar.gz
# 添加helm仓库 helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
# ingress-nginx镜像拉取 helm pull ingress-nginx/ingress-nginx
# 修改镜像地址 vim values.yaml
# registry: registry.cn-hangzhou.aliyuncs.com
# image: google_containers/nginx-ingress-controller
# image: google_containers/kube-webhook-certgen
# -- Use a `DaemonSet` or `Deployment`
#  kind: Deployment  修改 kind: DaemonSet
#nodeSelector:
#  kubernetes.io/os: linux
#  ingress: "true" 新增
# hostNetwork: true
# dnsPolicy: ClusterFirstWithHostNet
# LoadBalancer 改为 ClusterIP
# admissionWebhooks.enabled: false
# 创建ingress命名空间 kubectl create namespace ingress
# 为主节点添加ingress标签 kubectl label node master ingress=true
# helm install ingress-nginx -n ingress-nginx
apiVersion: apps/v1
kind: Deployment #部署
metadata:
  name: springboot-app
spec:
  replicas: 2 #2个副本
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
        - name: springboot-app
          image: registry.cn-hangzhou.aliyuncs.com/simeyghub/k8s-spring-test:v10 #刚刚push到阿里云上的镜像地址
          ports:
            - containerPort: 8080 #默认springboot端口

---

apiVersion: v1
kind: Service
metadata:
  name: springboot-app
spec:
  selector:
    app: springboot-app #选中上面的 Deployment
  ports:
    - port: 7003 #对外7003端口
      targetPort: 8080


---
#Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myingress
  labels:
    name: myingress
spec:
  IngressClass: nginx
  rules:
    - host: springboot.demo.com #所有的host这个域名请求 转发到上面的 Service= springboot-app
      http:
        paths:springboot-app
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: springboot-app # 转发到 这个Service
                port:
                  number: 7003
